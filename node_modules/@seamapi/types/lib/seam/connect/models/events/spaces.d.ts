import { z } from 'zod';
export declare const space_device_membership_changed_event: z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    space_id: z.ZodString;
} & {
    event_type: z.ZodLiteral<"space.device_membership_changed">;
    space_key: z.ZodOptional<z.ZodString>;
    device_ids: z.ZodArray<z.ZodString, "many">;
    acs_entrance_ids: z.ZodArray<z.ZodString, "many">;
}, "strip", z.ZodTypeAny, {
    workspace_id: string;
    created_at: string;
    event_id: string;
    occurred_at: string;
    event_type: "space.device_membership_changed";
    space_id: string;
    device_ids: string[];
    acs_entrance_ids: string[];
    space_key?: string | undefined;
}, {
    workspace_id: string;
    created_at: string;
    event_id: string;
    occurred_at: string;
    event_type: "space.device_membership_changed";
    space_id: string;
    device_ids: string[];
    acs_entrance_ids: string[];
    space_key?: string | undefined;
}>;
export type SpaceDeviceMembershipChangedEvent = z.infer<typeof space_device_membership_changed_event>;
export declare const space_events: readonly [z.ZodObject<{
    event_id: z.ZodString;
    workspace_id: z.ZodString;
    created_at: z.ZodString;
    occurred_at: z.ZodString;
} & {
    space_id: z.ZodString;
} & {
    event_type: z.ZodLiteral<"space.device_membership_changed">;
    space_key: z.ZodOptional<z.ZodString>;
    device_ids: z.ZodArray<z.ZodString, "many">;
    acs_entrance_ids: z.ZodArray<z.ZodString, "many">;
}, "strip", z.ZodTypeAny, {
    workspace_id: string;
    created_at: string;
    event_id: string;
    occurred_at: string;
    event_type: "space.device_membership_changed";
    space_id: string;
    device_ids: string[];
    acs_entrance_ids: string[];
    space_key?: string | undefined;
}, {
    workspace_id: string;
    created_at: string;
    event_id: string;
    occurred_at: string;
    event_type: "space.device_membership_changed";
    space_id: string;
    device_ids: string[];
    acs_entrance_ids: string[];
    space_key?: string | undefined;
}>];
